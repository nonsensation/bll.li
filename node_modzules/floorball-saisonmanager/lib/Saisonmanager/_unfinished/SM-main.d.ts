declare const apiUrl: string;
declare function get(url: string): void;
declare function put(url: string, value: any): void;
declare function post(url: string, value: any): void;
declare function _delete(url: string, x?: any): void;
declare class Endpoints {
    getLeagues(V: any, pe: any): void;
    getSingleLeague(V: any): void;
    getGameSchedule(V: any): void;
    getGameScheduleForGameDay(V: any, pe: any): void;
    getGameScheduleForCurrentGameDay(V: any): void;
    getTable(V: any): void;
    getGroupedTable(V: any): void;
    getScorer(V: any): void;
    getAdminLeagues(): void;
    getAdminGameDay(V: any): void;
    adminCreateGameDay(V: any): void;
    adminUpdateGameDay(V: any): void;
    adminDestroyGameDay(V: any): void;
    adminCreateLeagues(V: any): void;
    getAdminLeagueinterfacees(): void;
    getLeagueWithTeams(V: any): void;
    getAdminGameSchedule(V: any): void;
    getAdminLeagueAdditionalReferences(V: any): void;
    adminImportGameSchedule(V: any): void;
    adminCreateTeam(V: any): void;
    adminGetTeam(V: any): void;
    getLeagueClubs(V: any, pe: any): void;
    getAdminLeagueLicenses(V: any): void;
    getUserLeagueLicenses(V: any): void;
    getUserLeaguesLicenseIndex(): void;
    userCreateLicenseRequest(V: any, pe: any): void;
    userWithdrawLicenseRequest(V: any, pe: any): void;
    createGame(V: any): void;
    updateGame(V: any): void;
    updateGameRating(V: any, pe: any): void;
    deleteGame(V: any): void;
    addLineupPlayerToGame(V: any, pe: any, He: any, ot: any, at: any): void;
    removeLineupPlayerToGame(V: any, pe: any, He: any): void;
    setLineupCaptain(V: any, pe: any, He: any): void;
    addEvent(V: any, pe: any): void;
    setGameFlags(V: any, pe: any): void;
    setGameField(V: any, pe: any): void;
    setReferee(V: any, pe: any, He: any, ot: any, at: any): void;
    setCoach(V: any, pe: any, He: any, ot: any, at: any): void;
    deleteEvent(V: any, pe: any): void;
    setGameStatus(V: any, pe: any): void;
    setInGameStatus(V: any, pe: any): void;
    adminCreateOrUpdatePlayer(V: any): void;
    adminAddAdditionalClub(V: any, pe: any): void;
    adminRemoveAdditionalClub(V: any, pe: any, He: any): void;
    adminTransferPlayer(V: any, pe: any): void;
    updateLicenseStatus(V: any, pe: any, He: any, ot: any): void;
    reenableLicenseRequest(V: any, pe: any): void;
    getPenalties(): void;
    getPenaltyCodes(): void;
    getInit(): void;
    getGame(V: any): void;
    getArenas(): void;
    login(V: any, pe: any): void;
    logout(): void;
    lostPassword(V: any): void;
    resetPassword(V: any, pe: any, He: any): void;
    getAdminGameOperations(): void;
    getRefereeByLicenseNumber(V: any): void;
    getNations(): void;
    getClubPlayers(V: any): void;
    getPlayer(V: any): void;
    getAdditionalFields(V: any): void;
    userGetTeamLicenses(V: any): void;
    getAdminClubs(): void;
    getAdminClub(V: any): void;
    getAdminTeam(V: any): void;
    getAdminClubAll(): void;
    adminCreateClub(V: any): void;
    adminGetClubAndTeams(): void;
}
